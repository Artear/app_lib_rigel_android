buildscript {
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:$bintrayVersion"
        classpath "com.github.dcendents:android-maven-gradle-plugin:$dcendentsVersion"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:$dokkaVersion"
    }
}

plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'kotlin-kapt'
    id 'com.github.ben-manes.versions' version '0.21.0'
}

ext {
    bintrayRepo = 'Android'
    bintrayName = 'Rigel'

    publishedGroupId = 'com.artear.rigel'
    libraryName = 'Rigel'
    artifact = 'rigel'

    libraryDescription = 'An android library useful for common bottom navigation, making easier ' +
            'the launch of fragments, and manipulation of back stack.'

    siteUrl = 'https://github.com/Artear/app_lib_rigel_android'
    gitUrl = 'https://github.com/Artear/app_lib_rigel_android.git'

    developerId = 'artear'
    developerName = 'Artear Moviles'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]

}

static int getVersionCode(branch) {
    def versionCodeCommand = "git rev-list --count " + branch
    return versionCodeCommand.execute().text.trim().toInteger()
}

static def getBranchName() {
    return "git rev-parse --abbrev-ref HEAD".execute().text.trim()
}

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    def branch = getBranchName()
    def vCode = 0 + getVersionCode(branch)

    libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "${project.getName()}-${defaultConfig.versionName}-${variant.name}.aar"
        }
    }

    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode vCode
        versionName libraryVersion

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    //Test
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCoreVersion"

    //Kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"

    //Support
    implementation "com.google.android.material:material:$materialVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"

    //Artear
    implementation "com.artear.tools:tools:$toolsVersion"
    implementation "com.artear.ui:view:$uiViewVersion"

}

dependencyUpdates.resolutionStrategy {
    componentSelection { rules ->
        rules.all { ComponentSelection selection ->
            boolean rejected = ['alpha', 'beta', 'rc', 'cr', 'm', 'preview', 'b', 'ea'].any { qualifier ->
                selection.candidate.version ==~ /(?i).*[.-]${qualifier}[.\d-+]*/
            }
            if (rejected) {
                selection.reject('Release candidate')
            }
        }
    }
}


group = publishedGroupId
version = libraryVersion

apply from: 'publication.gradle'
apply from: 'bintray.gradle'